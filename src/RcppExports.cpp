// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ContrastRank
NumericVector ContrastRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ContrastRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ContrastRankNested
NumericVector ContrastRankNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ContrastRankNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastRankNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ContrastRankRef
NumericMatrix ContrastRankRef(NumericMatrix PMat);
RcppExport SEXP _StrucDiv_ContrastRankRef(SEXP PMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastRankRef(PMat));
    return rcpp_result_gen;
END_RCPP
}
// ContrastValue
NumericVector ContrastValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ContrastValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ContrastValueNested
NumericVector ContrastValueNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ContrastValueNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastValueNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ContrastValueRef
double ContrastValueRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_ContrastValueRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastValueRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityRank
NumericVector DissimilarityRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_DissimilarityRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityRankNested
NumericVector DissimilarityRankNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_DissimilarityRankNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityRankNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityRankRef
NumericMatrix DissimilarityRankRef(NumericMatrix PMat);
RcppExport SEXP _StrucDiv_DissimilarityRankRef(SEXP PMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityRankRef(PMat));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityValue
NumericVector DissimilarityValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_DissimilarityValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityValueNested
NumericVector DissimilarityValueNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_DissimilarityValueNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityValueNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityValueRef
NumericMatrix DissimilarityValueRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_DissimilarityValueRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityValueRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// Entropy
NumericVector Entropy(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_Entropy(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(Entropy(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// EntropyNested
NumericVector EntropyNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_EntropyNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(EntropyNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// EntropyRef
NumericMatrix EntropyRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_EntropyRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(EntropyRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityRank
NumericVector HomogeneityRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_HomogeneityRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityRankNested
NumericVector HomogeneityRankNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_HomogeneityRankNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityRankNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityRankRef
NumericMatrix HomogeneityRankRef(NumericMatrix PMat);
RcppExport SEXP _StrucDiv_HomogeneityRankRef(SEXP PMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityRankRef(PMat));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityValue
NumericVector HomogeneityValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_HomogeneityValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityValueNested
NumericVector HomogeneityValueNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_HomogeneityValueNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityValueNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityValueRef
NumericMatrix HomogeneityValueRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_HomogeneityValueRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityValueRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// NormalizedEntropy
NumericVector NormalizedEntropy(NumericMatrix Hetx, List PMat, int nrp, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_NormalizedEntropy(SEXP HetxSEXP, SEXP PMatSEXP, SEXP nrpSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(NormalizedEntropy(Hetx, PMat, nrp, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// NormalizedEntropyNested
NumericVector NormalizedEntropyNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, int nrp, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_NormalizedEntropyNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP nrpSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(NormalizedEntropyNested(Hetx, vMat_big, PMat, nrp, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// NormalizedEntropyRef
NumericMatrix NormalizedEntropyRef(NumericMatrix PMat, NumericVector xVal, double nrp);
RcppExport SEXP _StrucDiv_NormalizedEntropyRef(SEXP PMatSEXP, SEXP xValSEXP, SEXP nrpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    Rcpp::traits::input_parameter< double >::type nrp(nrpSEXP);
    rcpp_result_gen = Rcpp::wrap(NormalizedEntropyRef(PMat, xVal, nrp));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontal
NumericMatrix ProbabilityMatrixHorizontal(NumericMatrix xMat, int d, NumericVector Values);
RcppExport SEXP _StrucDiv_ProbabilityMatrixHorizontal(SEXP xMatSEXP, SEXP dSEXP, SEXP ValuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMat(xMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Values(ValuesSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontal(xMat, d, Values));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontalDynamic
List ProbabilityMatrixHorizontalDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixHorizontalDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontalDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontalNested
List ProbabilityMatrixHorizontalNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixHorizontalNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontalNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontalPost
List ProbabilityMatrixHorizontalPost(NumericMatrix vMat, NumericMatrix x, int d, int nrp, int nrp_big, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixHorizontalPost(SEXP vMatSEXP, SEXP xSEXP, SEXP dSEXP, SEXP nrpSEXP, SEXP nrp_bigSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< int >::type nrp_big(nrp_bigSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontalPost(vMat, x, d, nrp, nrp_big, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135
NumericMatrix ProbabilityMatrixDiagonal135(NumericMatrix xMat, int d, NumericVector Values);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal135(SEXP xMatSEXP, SEXP dSEXP, SEXP ValuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMat(xMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Values(ValuesSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135(xMat, d, Values));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135Dynamic
List ProbabilityMatrixDiagonal135Dynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal135Dynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135Dynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135Nested
List ProbabilityMatrixDiagonal135Nested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal135Nested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135Nested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135Post
List ProbabilityMatrixDiagonal135Post(NumericMatrix vMat, NumericMatrix x, int d, int nrp, int nrp_big, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal135Post(SEXP vMatSEXP, SEXP xSEXP, SEXP dSEXP, SEXP nrpSEXP, SEXP nrp_bigSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< int >::type nrp_big(nrp_bigSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135Post(vMat, x, d, nrp, nrp_big, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45
NumericMatrix ProbabilityMatrixDiagonal45(NumericMatrix xMat, int d, NumericVector Values);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal45(SEXP xMatSEXP, SEXP dSEXP, SEXP ValuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMat(xMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Values(ValuesSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45(xMat, d, Values));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45Dynamic
List ProbabilityMatrixDiagonal45Dynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal45Dynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45Dynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45Nested
List ProbabilityMatrixDiagonal45Nested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal45Nested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45Nested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45Post
List ProbabilityMatrixDiagonal45Post(NumericMatrix vMat, NumericMatrix x, int d, int nrp, int nrp_big, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixDiagonal45Post(SEXP vMatSEXP, SEXP xSEXP, SEXP dSEXP, SEXP nrpSEXP, SEXP nrp_bigSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< int >::type nrp_big(nrp_bigSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45Post(vMat, x, d, nrp, nrp_big, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVertical
NumericMatrix ProbabilityMatrixVertical(NumericMatrix xMat, int d, NumericVector Values);
RcppExport SEXP _StrucDiv_ProbabilityMatrixVertical(SEXP xMatSEXP, SEXP dSEXP, SEXP ValuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMat(xMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Values(ValuesSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVertical(xMat, d, Values));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVerticalDynamic
List ProbabilityMatrixVerticalDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixVerticalDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVerticalDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVerticalNested
List ProbabilityMatrixVerticalNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixVerticalNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVerticalNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVerticalPost
List ProbabilityMatrixVerticalPost(NumericMatrix vMat, NumericMatrix x, int d, int nrp, int nrp_big, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixVerticalPost(SEXP vMatSEXP, SEXP xSEXP, SEXP dSEXP, SEXP nrpSEXP, SEXP nrp_bigSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< int >::type nrp_big(nrp_bigSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVerticalPost(vMat, x, d, nrp, nrp_big, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAll
NumericMatrix ProbabilityMatrixAll(NumericMatrix xMat, int d, NumericVector Values);
RcppExport SEXP _StrucDiv_ProbabilityMatrixAll(SEXP xMatSEXP, SEXP dSEXP, SEXP ValuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMat(xMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Values(ValuesSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAll(xMat, d, Values));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAllDynamic
List ProbabilityMatrixAllDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixAllDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAllDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAllNested
List ProbabilityMatrixAllNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixAllNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAllNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAllPost
List ProbabilityMatrixAllPost(NumericMatrix vMat, NumericMatrix x, int d, int nrp, int nrp_big, bool display_progress);
RcppExport SEXP _StrucDiv_ProbabilityMatrixAllPost(SEXP vMatSEXP, SEXP xSEXP, SEXP dSEXP, SEXP nrpSEXP, SEXP nrp_bigSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< int >::type nrp_big(nrp_bigSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAllPost(vMat, x, d, nrp, nrp_big, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsRank
NumericVector WeightedEntropyAbsRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsRankNested
NumericVector WeightedEntropyAbsRankNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsRankNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsRankNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsRankRef
NumericMatrix WeightedEntropyAbsRankRef(NumericMatrix PMat);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsRankRef(SEXP PMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsRankRef(PMat));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsValue
NumericVector WeightedEntropyAbsValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsValueNested
NumericVector WeightedEntropyAbsValueNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsValueNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsValueNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsValueRef
NumericMatrix WeightedEntropyAbsValueRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_WeightedEntropyAbsValueRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsValueRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrRank
NumericVector WeightedEntropySqrRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropySqrRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrRankNested
NumericVector WeightedEntropySqrRankNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropySqrRankNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrRankNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrRankRef
NumericMatrix WeightedEntropySqrRankRef(NumericMatrix PMat);
RcppExport SEXP _StrucDiv_WeightedEntropySqrRankRef(SEXP PMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrRankRef(PMat));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrValue
NumericVector WeightedEntropySqrValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropySqrValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrValueNested
NumericVector WeightedEntropySqrValueNested(NumericMatrix Hetx, NumericMatrix vMat_big, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv_WeightedEntropySqrValueNested(SEXP HetxSEXP, SEXP vMat_bigSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrValueNested(Hetx, vMat_big, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrValueRef
NumericMatrix WeightedEntropySqrValueRef(NumericMatrix PMat, NumericVector xVal);
RcppExport SEXP _StrucDiv_WeightedEntropySqrValueRef(SEXP PMatSEXP, SEXP xValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVal(xValSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrValueRef(PMat, xVal));
    return rcpp_result_gen;
END_RCPP
}
// do_focal_get
NumericVector do_focal_get(NumericMatrix d, NumericVector dim, NumericVector ngb);
RcppExport SEXP _StrucDiv_do_focal_get(SEXP dSEXP, SEXP dimSEXP, SEXP ngbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngb(ngbSEXP);
    rcpp_result_gen = Rcpp::wrap(do_focal_get(d, dim, ngb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StrucDiv_ContrastRank", (DL_FUNC) &_StrucDiv_ContrastRank, 4},
    {"_StrucDiv_ContrastRankNested", (DL_FUNC) &_StrucDiv_ContrastRankNested, 5},
    {"_StrucDiv_ContrastRankRef", (DL_FUNC) &_StrucDiv_ContrastRankRef, 1},
    {"_StrucDiv_ContrastValue", (DL_FUNC) &_StrucDiv_ContrastValue, 4},
    {"_StrucDiv_ContrastValueNested", (DL_FUNC) &_StrucDiv_ContrastValueNested, 5},
    {"_StrucDiv_ContrastValueRef", (DL_FUNC) &_StrucDiv_ContrastValueRef, 2},
    {"_StrucDiv_DissimilarityRank", (DL_FUNC) &_StrucDiv_DissimilarityRank, 4},
    {"_StrucDiv_DissimilarityRankNested", (DL_FUNC) &_StrucDiv_DissimilarityRankNested, 5},
    {"_StrucDiv_DissimilarityRankRef", (DL_FUNC) &_StrucDiv_DissimilarityRankRef, 1},
    {"_StrucDiv_DissimilarityValue", (DL_FUNC) &_StrucDiv_DissimilarityValue, 4},
    {"_StrucDiv_DissimilarityValueNested", (DL_FUNC) &_StrucDiv_DissimilarityValueNested, 5},
    {"_StrucDiv_DissimilarityValueRef", (DL_FUNC) &_StrucDiv_DissimilarityValueRef, 2},
    {"_StrucDiv_Entropy", (DL_FUNC) &_StrucDiv_Entropy, 4},
    {"_StrucDiv_EntropyNested", (DL_FUNC) &_StrucDiv_EntropyNested, 5},
    {"_StrucDiv_EntropyRef", (DL_FUNC) &_StrucDiv_EntropyRef, 2},
    {"_StrucDiv_HomogeneityRank", (DL_FUNC) &_StrucDiv_HomogeneityRank, 4},
    {"_StrucDiv_HomogeneityRankNested", (DL_FUNC) &_StrucDiv_HomogeneityRankNested, 5},
    {"_StrucDiv_HomogeneityRankRef", (DL_FUNC) &_StrucDiv_HomogeneityRankRef, 1},
    {"_StrucDiv_HomogeneityValue", (DL_FUNC) &_StrucDiv_HomogeneityValue, 4},
    {"_StrucDiv_HomogeneityValueNested", (DL_FUNC) &_StrucDiv_HomogeneityValueNested, 5},
    {"_StrucDiv_HomogeneityValueRef", (DL_FUNC) &_StrucDiv_HomogeneityValueRef, 2},
    {"_StrucDiv_NormalizedEntropy", (DL_FUNC) &_StrucDiv_NormalizedEntropy, 5},
    {"_StrucDiv_NormalizedEntropyNested", (DL_FUNC) &_StrucDiv_NormalizedEntropyNested, 6},
    {"_StrucDiv_NormalizedEntropyRef", (DL_FUNC) &_StrucDiv_NormalizedEntropyRef, 3},
    {"_StrucDiv_ProbabilityMatrixHorizontal", (DL_FUNC) &_StrucDiv_ProbabilityMatrixHorizontal, 3},
    {"_StrucDiv_ProbabilityMatrixHorizontalDynamic", (DL_FUNC) &_StrucDiv_ProbabilityMatrixHorizontalDynamic, 4},
    {"_StrucDiv_ProbabilityMatrixHorizontalNested", (DL_FUNC) &_StrucDiv_ProbabilityMatrixHorizontalNested, 4},
    {"_StrucDiv_ProbabilityMatrixHorizontalPost", (DL_FUNC) &_StrucDiv_ProbabilityMatrixHorizontalPost, 6},
    {"_StrucDiv_ProbabilityMatrixDiagonal135", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal135, 3},
    {"_StrucDiv_ProbabilityMatrixDiagonal135Dynamic", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal135Dynamic, 4},
    {"_StrucDiv_ProbabilityMatrixDiagonal135Nested", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal135Nested, 4},
    {"_StrucDiv_ProbabilityMatrixDiagonal135Post", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal135Post, 6},
    {"_StrucDiv_ProbabilityMatrixDiagonal45", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal45, 3},
    {"_StrucDiv_ProbabilityMatrixDiagonal45Dynamic", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal45Dynamic, 4},
    {"_StrucDiv_ProbabilityMatrixDiagonal45Nested", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal45Nested, 4},
    {"_StrucDiv_ProbabilityMatrixDiagonal45Post", (DL_FUNC) &_StrucDiv_ProbabilityMatrixDiagonal45Post, 6},
    {"_StrucDiv_ProbabilityMatrixVertical", (DL_FUNC) &_StrucDiv_ProbabilityMatrixVertical, 3},
    {"_StrucDiv_ProbabilityMatrixVerticalDynamic", (DL_FUNC) &_StrucDiv_ProbabilityMatrixVerticalDynamic, 4},
    {"_StrucDiv_ProbabilityMatrixVerticalNested", (DL_FUNC) &_StrucDiv_ProbabilityMatrixVerticalNested, 4},
    {"_StrucDiv_ProbabilityMatrixVerticalPost", (DL_FUNC) &_StrucDiv_ProbabilityMatrixVerticalPost, 6},
    {"_StrucDiv_ProbabilityMatrixAll", (DL_FUNC) &_StrucDiv_ProbabilityMatrixAll, 3},
    {"_StrucDiv_ProbabilityMatrixAllDynamic", (DL_FUNC) &_StrucDiv_ProbabilityMatrixAllDynamic, 4},
    {"_StrucDiv_ProbabilityMatrixAllNested", (DL_FUNC) &_StrucDiv_ProbabilityMatrixAllNested, 4},
    {"_StrucDiv_ProbabilityMatrixAllPost", (DL_FUNC) &_StrucDiv_ProbabilityMatrixAllPost, 6},
    {"_StrucDiv_WeightedEntropyAbsRank", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsRank, 4},
    {"_StrucDiv_WeightedEntropyAbsRankNested", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsRankNested, 5},
    {"_StrucDiv_WeightedEntropyAbsRankRef", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsRankRef, 1},
    {"_StrucDiv_WeightedEntropyAbsValue", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsValue, 4},
    {"_StrucDiv_WeightedEntropyAbsValueNested", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsValueNested, 5},
    {"_StrucDiv_WeightedEntropyAbsValueRef", (DL_FUNC) &_StrucDiv_WeightedEntropyAbsValueRef, 2},
    {"_StrucDiv_WeightedEntropySqrRank", (DL_FUNC) &_StrucDiv_WeightedEntropySqrRank, 4},
    {"_StrucDiv_WeightedEntropySqrRankNested", (DL_FUNC) &_StrucDiv_WeightedEntropySqrRankNested, 5},
    {"_StrucDiv_WeightedEntropySqrRankRef", (DL_FUNC) &_StrucDiv_WeightedEntropySqrRankRef, 1},
    {"_StrucDiv_WeightedEntropySqrValue", (DL_FUNC) &_StrucDiv_WeightedEntropySqrValue, 4},
    {"_StrucDiv_WeightedEntropySqrValueNested", (DL_FUNC) &_StrucDiv_WeightedEntropySqrValueNested, 5},
    {"_StrucDiv_WeightedEntropySqrValueRef", (DL_FUNC) &_StrucDiv_WeightedEntropySqrValueRef, 2},
    {"_StrucDiv_do_focal_get", (DL_FUNC) &_StrucDiv_do_focal_get, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_StrucDiv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
