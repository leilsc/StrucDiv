// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ContrastRank
NumericVector ContrastRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ContrastRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ContrastValue
NumericVector ContrastValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ContrastValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ContrastValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityRank
NumericVector DissimilarityRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_DissimilarityRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// DissimilarityValue
NumericVector DissimilarityValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_DissimilarityValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(DissimilarityValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// Entropy
NumericVector Entropy(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_Entropy(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(Entropy(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityRank
NumericVector HomogeneityRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_HomogeneityRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// HomogeneityValue
NumericVector HomogeneityValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_HomogeneityValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(HomogeneityValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// NormalizedEntropy
NumericVector NormalizedEntropy(NumericMatrix Hetx, List PMat, int nrp, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_NormalizedEntropy(SEXP HetxSEXP, SEXP PMatSEXP, SEXP nrpSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< int >::type nrp(nrpSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(NormalizedEntropy(Hetx, PMat, nrp, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontalDynamic
List ProbabilityMatrixHorizontalDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixHorizontalDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontalDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixHorizontalNested
List ProbabilityMatrixHorizontalNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixHorizontalNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixHorizontalNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135Dynamic
List ProbabilityMatrixDiagonal135Dynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixDiagonal135Dynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135Dynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal135Nested
List ProbabilityMatrixDiagonal135Nested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixDiagonal135Nested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal135Nested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45Dynamic
List ProbabilityMatrixDiagonal45Dynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixDiagonal45Dynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45Dynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixDiagonal45Nested
List ProbabilityMatrixDiagonal45Nested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixDiagonal45Nested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixDiagonal45Nested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVerticalDynamic
List ProbabilityMatrixVerticalDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixVerticalDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVerticalDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixVerticalNested
List ProbabilityMatrixVerticalNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixVerticalNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixVerticalNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAllDynamic
List ProbabilityMatrixAllDynamic(NumericMatrix vMat, int d, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixAllDynamic(SEXP vMatSEXP, SEXP dSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAllDynamic(vMat, d, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// ProbabilityMatrixAllNested
List ProbabilityMatrixAllNested(NumericMatrix vMat, NumericMatrix vMat_big, int d, bool display_progress);
RcppExport SEXP _StrucDiv2_ProbabilityMatrixAllNested(SEXP vMatSEXP, SEXP vMat_bigSEXP, SEXP dSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat(vMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vMat_big(vMat_bigSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(ProbabilityMatrixAllNested(vMat, vMat_big, d, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsRank
NumericVector WeightedEntropyAbsRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_WeightedEntropyAbsRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropyAbsValue
NumericVector WeightedEntropyAbsValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_WeightedEntropyAbsValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropyAbsValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrRank
NumericVector WeightedEntropySqrRank(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_WeightedEntropySqrRank(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrRank(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// WeightedEntropySqrValue
NumericVector WeightedEntropySqrValue(NumericMatrix Hetx, List PMat, bool narm, bool display_progress);
RcppExport SEXP _StrucDiv2_WeightedEntropySqrValue(SEXP HetxSEXP, SEXP PMatSEXP, SEXP narmSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Hetx(HetxSEXP);
    Rcpp::traits::input_parameter< List >::type PMat(PMatSEXP);
    Rcpp::traits::input_parameter< bool >::type narm(narmSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(WeightedEntropySqrValue(Hetx, PMat, narm, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// do_focal_get
NumericVector do_focal_get(NumericMatrix d, NumericVector dim, NumericVector ngb);
RcppExport SEXP _StrucDiv2_do_focal_get(SEXP dSEXP, SEXP dimSEXP, SEXP ngbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngb(ngbSEXP);
    rcpp_result_gen = Rcpp::wrap(do_focal_get(d, dim, ngb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StrucDiv2_ContrastRank", (DL_FUNC) &_StrucDiv2_ContrastRank, 4},
    {"_StrucDiv2_ContrastValue", (DL_FUNC) &_StrucDiv2_ContrastValue, 4},
    {"_StrucDiv2_DissimilarityRank", (DL_FUNC) &_StrucDiv2_DissimilarityRank, 4},
    {"_StrucDiv2_DissimilarityValue", (DL_FUNC) &_StrucDiv2_DissimilarityValue, 4},
    {"_StrucDiv2_Entropy", (DL_FUNC) &_StrucDiv2_Entropy, 4},
    {"_StrucDiv2_HomogeneityRank", (DL_FUNC) &_StrucDiv2_HomogeneityRank, 4},
    {"_StrucDiv2_HomogeneityValue", (DL_FUNC) &_StrucDiv2_HomogeneityValue, 4},
    {"_StrucDiv2_NormalizedEntropy", (DL_FUNC) &_StrucDiv2_NormalizedEntropy, 5},
    {"_StrucDiv2_ProbabilityMatrixHorizontalDynamic", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixHorizontalDynamic, 4},
    {"_StrucDiv2_ProbabilityMatrixHorizontalNested", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixHorizontalNested, 4},
    {"_StrucDiv2_ProbabilityMatrixDiagonal135Dynamic", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixDiagonal135Dynamic, 4},
    {"_StrucDiv2_ProbabilityMatrixDiagonal135Nested", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixDiagonal135Nested, 4},
    {"_StrucDiv2_ProbabilityMatrixDiagonal45Dynamic", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixDiagonal45Dynamic, 4},
    {"_StrucDiv2_ProbabilityMatrixDiagonal45Nested", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixDiagonal45Nested, 4},
    {"_StrucDiv2_ProbabilityMatrixVerticalDynamic", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixVerticalDynamic, 4},
    {"_StrucDiv2_ProbabilityMatrixVerticalNested", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixVerticalNested, 4},
    {"_StrucDiv2_ProbabilityMatrixAllDynamic", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixAllDynamic, 4},
    {"_StrucDiv2_ProbabilityMatrixAllNested", (DL_FUNC) &_StrucDiv2_ProbabilityMatrixAllNested, 4},
    {"_StrucDiv2_WeightedEntropyAbsRank", (DL_FUNC) &_StrucDiv2_WeightedEntropyAbsRank, 4},
    {"_StrucDiv2_WeightedEntropyAbsValue", (DL_FUNC) &_StrucDiv2_WeightedEntropyAbsValue, 4},
    {"_StrucDiv2_WeightedEntropySqrRank", (DL_FUNC) &_StrucDiv2_WeightedEntropySqrRank, 4},
    {"_StrucDiv2_WeightedEntropySqrValue", (DL_FUNC) &_StrucDiv2_WeightedEntropySqrValue, 4},
    {"_StrucDiv2_do_focal_get", (DL_FUNC) &_StrucDiv2_do_focal_get, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_StrucDiv2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
